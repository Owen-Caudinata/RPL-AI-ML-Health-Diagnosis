// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ElectronicHealthRecord {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id               Int                      @id @default(autoincrement())
  email            String                   @unique
  name             String?
  hashedPassword   String
  profile          Profile?
  ehr              ElectronicHealthRecord[]
  reminders        Reminder[]
  alzheimerReports AlzheimerReport[]
  feedbacks        Feedback[]
  pneumoniaReports PneumoniaReport[]
}

model Admin {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  name           String?
  hashedPassword String
}

model DailyNewsLetter {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String?
  content   String?
}

model Reminder {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model AlzheimerReport {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  classification String   @db.VarChar(255)
  description    String   @db.VarChar(255)
  status         String   @db.VarChar(255)
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
}

model Feedback {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  title     String   @db.VarChar(255)
  content   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model PneumoniaReport {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  classification String   @db.VarChar(255)
  description    String   @db.VarChar(255)
  status         String   @db.VarChar(255)
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
}
